{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/pendem.siddu/GDC Dashboard2/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { read, utils } from 'xlsx';\nimport * as XLSX from 'xlsx';\nimport { PopupDataComponent } from '../popups/popup-data/popup-data.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nexport let XlsApi = /*@__PURE__*/(() => {\n  class XlsApi {\n    constructor(dialog) {\n      this.dialog = dialog;\n    }\n\n    getDataFromXl(url, sheet) {\n      return _asyncToGenerator(function* () {\n        if (url == 1) {\n          url = 'assets/docs/resource_exp.xlsx';\n        } else if (url == 2) {\n          url = 'assets/docs/NMD_Dashboards_Master_Data_V11.xlsx';\n        } else if (url == 4) {\n          url = 'assets/docs/NMD_Dashboards_Master_Data_Updated_11th_May.xlsx'; //url = 'assets/docs/NMD_Dashboards_Master_Data-amj.xlsx';\n        } else {\n          //url = 'assets/docs/NMD_Dashboards_Master_Data_Updated_11th_May.xlsx';\n          //url = 'assets/docs/NMD_Dashboards_Master_Data-27.xlsx';\n          url = 'assets/docs/FEB-8th.xlsx';\n        }\n\n        let Heading = [['key', 'value1', 'value2', 'value3', 'value4', 'value5', 'value6', 'value7', 'value8', 'value9', 'value10']];\n        const f = yield (yield fetch(url)).arrayBuffer();\n        const wb = read(f);\n        const ws = utils.sheet_add_aoa(wb.Sheets[wb.SheetNames[sheet]], Heading);\n        const data = utils.sheet_to_json(ws);\n        return data;\n      })();\n    }\n\n    exportData(data, fileName) {\n      return _asyncToGenerator(function* () {\n        const ws = XLSX.utils.json_to_sheet(data);\n        const wb = XLSX.utils.book_new();\n        XLSX.utils.book_append_sheet(wb, ws, 'test');\n        XLSX.writeFile(wb, fileName);\n        return '0';\n      })();\n    }\n\n    openDailoge(datas, title) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        const dialogRef = _this.dialog.open(PopupDataComponent, {\n          width: '800px',\n          maxHeight: '500px',\n          data: {\n            dialogTitle: title,\n            datas: datas\n          }\n        });\n\n        dialogRef.afterClosed().subscribe(dialogResult => {\n          _this.result = dialogResult;\n        });\n      })();\n    }\n\n    getDataFromXl2(url, sheet) {\n      return _asyncToGenerator(function* () {\n        if (url == 1) {\n          url = 'assets/docs/resource_exp.xlsx';\n        } else if (url == 2) {\n          url = 'assets/docs/NMD_Dashboards_Master_Data_V11.xlsx';\n        } else if (url == 4) {\n          url = 'assets/docs/NMD_Dashboards_Master_Data_Updated_11th_May.xlsx';\n        } else {\n          //url = 'assets/docs/NMD_Dashboards_Master_Data-27.xlsx';\n          url = 'assets/docs/FEB-8th.xlsx';\n        }\n\n        let Heading = [[]];\n        const f = yield (yield fetch(url)).arrayBuffer();\n        const wb = read(f);\n        const ws = utils.sheet_add_aoa(wb.Sheets[wb.SheetNames[sheet]], Heading);\n        const data = utils.sheet_to_json(ws);\n        return data;\n      })();\n    }\n\n    getDataFromXl3(url, sheet) {\n      return _asyncToGenerator(function* () {\n        if (url == 1) {\n          url = 'assets/docs/resource_exp.xlsx';\n        } else if (url == 2) {\n          url = 'assets/docs/NMD_Dashboards_Master_Data_V11.xlsx';\n        } else if (url == 4) {\n          url = 'assets/docs/NMD_Dashboards_Master_Data_Updated_11th_May.xlsx';\n        } else {\n          //url = 'assets/docs/NMD_Dashboards_Master_Data-27.xlsx';\n          url = 'assets/docs/FEB-8th.xlsx';\n        }\n\n        let Heading = [['key', 'value1', 'value2', 'value3', 'value4', 'value5', 'value6', 'value7', 'value8', 'value9', 'value10', 'value11', 'value12', 'value13', 'value14', 'value15', 'value16', 'value17', 'value18', 'value19', 'value20', 'value21', 'value22', 'value23', 'value24', 'value25', 'value26', 'value27', 'value28', 'value29', 'value30', 'value31', 'value32', 'value33', 'value34', 'value35', 'value36', 'value37', 'value38', 'value39', 'value40', 'value41', 'value42', 'value43', 'value44', 'value45', 'value46', 'value47', 'value48', 'value49', 'value50', 'value51', 'value52', 'value53', 'value54', 'value55', 'value56', 'value57', 'value58', 'value59', 'value60', 'value61']];\n        const f = yield (yield fetch(url)).arrayBuffer();\n        const wb = read(f);\n        const ws = utils.sheet_add_aoa(wb.Sheets[wb.SheetNames[sheet]], Heading);\n        const data = utils.sheet_to_json(ws);\n        return data;\n      })();\n    }\n\n    getRole() {\n      return sessionStorage.getItem('role');\n    }\n\n    ngOnInit() {}\n\n  }\n\n  XlsApi.ɵfac = function XlsApi_Factory(t) {\n    return new (t || XlsApi)(i0.ɵɵinject(i1.MatDialog));\n  };\n\n  XlsApi.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: XlsApi,\n    factory: XlsApi.ɵfac,\n    providedIn: 'root'\n  });\n  return XlsApi;\n})();","map":null,"metadata":{},"sourceType":"module"}