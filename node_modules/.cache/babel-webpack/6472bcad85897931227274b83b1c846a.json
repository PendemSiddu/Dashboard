{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/pendem.siddu/GDC Dashboard2/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { read, utils } from 'xlsx';\nimport * as XLSX from 'xlsx';\nimport { PopupDataComponent } from '../popups/popup-data/popup-data.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nexport class XlsApi {\n  constructor(dialog) {\n    this.dialog = dialog;\n  }\n\n  getDataFromXl(url, sheet) {\n    return _asyncToGenerator(function* () {\n      if (url == 1) {\n        url = 'assets/docs/resource_exp.xlsx';\n      } else if (url == 2) {\n        url = 'assets/docs/NMD_Dashboards_Master_Data_V11.xlsx';\n      } else if (url == 4) {\n        url = 'assets/docs/NMD_Dashboards_Master_Data_Updated_11th_May.xlsx'; //url = 'assets/docs/NMD_Dashboards_Master_Data-amj.xlsx';\n      } else {\n        //url = 'assets/docs/NMD_Dashboards_Master_Data_Updated_11th_May.xlsx';\n        //url = 'assets/docs/NMD_Dashboards_Master_Data-27.xlsx';\n        url = 'assets/docs/FEB-8th.xlsx';\n      }\n\n      let Heading = [['key', 'value1', 'value2', 'value3', 'value4', 'value5', 'value6', 'value7', 'value8', 'value9', 'value10', 'value11', 'value12', 'value13', 'value14', 'value15', 'value16', 'value17', 'value18', 'value19', 'value20', 'value1', 'value2', 'value3', 'value4', 'value5', 'value6', 'value7', 'value8', 'value9', 'value10']];\n      const f = yield (yield fetch(url)).arrayBuffer();\n      const wb = read(f);\n      const ws = utils.sheet_add_aoa(wb.Sheets[wb.SheetNames[sheet]], Heading);\n      const data = utils.sheet_to_json(ws);\n      return data;\n    })();\n  }\n\n  exportData(data, fileName) {\n    return _asyncToGenerator(function* () {\n      const ws = XLSX.utils.json_to_sheet(data);\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, 'test');\n      XLSX.writeFile(wb, fileName);\n      return '0';\n    })();\n  }\n\n  openDailoge(datas, title) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const dialogRef = _this.dialog.open(PopupDataComponent, {\n        width: '800px',\n        maxHeight: '500px',\n        data: {\n          dialogTitle: title,\n          datas: datas\n        }\n      });\n\n      dialogRef.afterClosed().subscribe(dialogResult => {\n        _this.result = dialogResult;\n      });\n    })();\n  }\n\n  getDataFromXl2(url, sheet) {\n    return _asyncToGenerator(function* () {\n      if (url == 1) {\n        url = 'assets/docs/resource_exp.xlsx';\n      } else if (url == 2) {\n        url = 'assets/docs/NMD_Dashboards_Master_Data_V11.xlsx';\n      } else if (url == 4) {\n        url = 'assets/docs/NMD_Dashboards_Master_Data_Updated_11th_May.xlsx';\n      } else {\n        //url = 'assets/docs/NMD_Dashboards_Master_Data-27.xlsx';\n        url = 'assets/docs/FEB-8th.xlsx';\n      }\n\n      let Heading = [[]];\n      const f = yield (yield fetch(url)).arrayBuffer();\n      const wb = read(f);\n      const ws = utils.sheet_add_aoa(wb.Sheets[wb.SheetNames[sheet]], Heading);\n      const data = utils.sheet_to_json(ws);\n      return data;\n    })();\n  }\n\n  getRole() {\n    return sessionStorage.getItem('role');\n  }\n\n  ngOnInit() {}\n\n}\n\nXlsApi.ɵfac = function XlsApi_Factory(t) {\n  return new (t || XlsApi)(i0.ɵɵinject(i1.MatDialog));\n};\n\nXlsApi.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: XlsApi,\n  factory: XlsApi.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\Users\\pendem.siddu\\GDC Dashboard2\\src\\app\\api\\xl-api.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { read, utils } from 'xlsx';\r\nimport * as XLSX from 'xlsx';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { PopupDataComponent } from '../popups/popup-data/popup-data.component';\r\n \r\ninterface President {\r\n  key: string;\r\n  value1: string;\r\n  value2: string;\r\n  value3: string;\r\n  value4: string;\r\n  value5: string;\r\n  value6: string;\r\n  value7: string;\r\n  value8: string;\r\n  value9: string;\r\n  value10: string;\r\n}\r\n@Injectable({ providedIn: 'root' })\r\nexport class XlsApi {\r\n  result: any;\r\n \r\n  async getDataFromXl(url: any, sheet: number) {\r\n    if (url == 1) {\r\n      url = 'assets/docs/resource_exp.xlsx';\r\n    } else if (url == 2) {\r\n      url = 'assets/docs/NMD_Dashboards_Master_Data_V11.xlsx';\r\n    } else if (url == 4) {\r\n      url = 'assets/docs/NMD_Dashboards_Master_Data_Updated_11th_May.xlsx';\r\n      //url = 'assets/docs/NMD_Dashboards_Master_Data-amj.xlsx';\r\n    } else {\r\n      //url = 'assets/docs/NMD_Dashboards_Master_Data_Updated_11th_May.xlsx';\r\n      //url = 'assets/docs/NMD_Dashboards_Master_Data-27.xlsx';\r\n      url = 'assets/docs/FEB-8th.xlsx';\r\n    }\r\n    let Heading = [\r\n      [\r\n        'key',\r\n        'value1',\r\n        'value2',\r\n        'value3',\r\n        'value4',\r\n        'value5',\r\n        'value6',\r\n        'value7',\r\n        'value8',\r\n        'value9',\r\n        'value10',\r\n        'value11',\r\n        'value12',\r\n        'value13',\r\n        'value14',\r\n        'value15',\r\n        'value16',\r\n        'value17',\r\n        'value18',\r\n        'value19',\r\n        'value20',\r\n        'value1',\r\n        'value2',\r\n        'value3',\r\n        'value4',\r\n        'value5',\r\n        'value6',\r\n        'value7',\r\n        'value8',\r\n        'value9',\r\n        'value10',\r\n      ],\r\n    ];\r\n    const f = await (await fetch(url)).arrayBuffer();\r\n    const wb = read(f);\r\n \r\n    const ws = utils.sheet_add_aoa(wb.Sheets[wb.SheetNames[sheet]], Heading);\r\n    const data = utils.sheet_to_json<President>(ws);\r\n    return data;\r\n  }\r\n \r\n  async exportData(data: any, fileName: any) {\r\n    const ws: XLSX.WorkSheet = XLSX.utils.json_to_sheet(data);\r\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, 'test');\r\n    XLSX.writeFile(wb, fileName);\r\n    return '0';\r\n  }\r\n \r\n  constructor(public dialog: MatDialog) {}\r\n \r\n  async openDailoge(datas: any, title: any) {\r\n    const dialogRef = this.dialog.open(PopupDataComponent, {\r\n      width: '800px',\r\n      maxHeight: '500px',\r\n      data: { dialogTitle: title, datas: datas },\r\n    });\r\n    dialogRef.afterClosed().subscribe((dialogResult) => {\r\n      this.result = dialogResult;\r\n    });\r\n  }\r\n \r\n  async getDataFromXl2(url: any, sheet: number) {\r\n    if (url == 1) {\r\n      url = 'assets/docs/resource_exp.xlsx';\r\n    } else if (url == 2) {\r\n      url = 'assets/docs/NMD_Dashboards_Master_Data_V11.xlsx';\r\n    } else if (url == 4) {\r\n      url = 'assets/docs/NMD_Dashboards_Master_Data_Updated_11th_May.xlsx';\r\n    } else {\r\n      //url = 'assets/docs/NMD_Dashboards_Master_Data-27.xlsx';\r\n      url = 'assets/docs/FEB-8th.xlsx';\r\n    }\r\n    let Heading = [[]];\r\n    const f = await (await fetch(url)).arrayBuffer();\r\n    const wb = read(f);\r\n \r\n    const ws = utils.sheet_add_aoa(wb.Sheets[wb.SheetNames[sheet]], Heading);\r\n    const data = utils.sheet_to_json<President>(ws);\r\n    return data;\r\n  }\r\n \r\n  getRole() {\r\n    return sessionStorage.getItem('role');\r\n  }\r\n \r\n  ngOnInit(): void {}\r\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}